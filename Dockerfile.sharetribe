FROM ubuntu:18.04

ENV RUBY_VERSION 2.3.4

RUN DEBIAN_FRONTEND=noninteractive apt-get update \
    && apt-get dist-upgrade -y \
    && apt-get install -y curl gnupg build-essential software-properties-common apt-utils \
    && apt-get update \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
    
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https ca-certificates \
    && apt-get install -y dirmngr gnupg nodejs && ln -sf /usr/bin/nodejs /usr/local/bin/node
    
RUN useradd -ms /bin/bash app
    
RUN DEBIAN_FRONTEND=noninteractive curl -sSL https://rvm.io/mpapis.asc | gpg --import - \
    && curl -sSL https://rvm.io/pkuczynski.asc | gpg --import - \
    && curl -sSL https://get.rvm.io | bash -s stable \
    && /bin/bash -l -c ". /etc/profile.d/rvm.sh && rvm install ruby-${RUBY_VERSION} && rvm --default use ruby-${RUBY_VERSION}"
    
RUN DEBIAN_FRONTEND=noninteractive usermod -a -G rvm `whoami` \
    && /bin/bash -l -c "gem install bundler --no-rdoc --no-ri" \
    && sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger bionic main > /etc/apt/sources.list.d/passenger.list' \
    && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y nginx libnginx-mod-http-passenger mysql-client cron supervisor postfix rsyslog \
    && if [ ! -f /etc/nginx/modules-enabled/50-mod-http-passenger.conf ]; then cp /usr/share/nginx/modules-available/mod-http-passenger.load /etc/nginx/modules-enabled/50-mod-http-passenger.conf ; fi

COPY . /opt/app
WORKDIR /opt/app
ENV NODE_ENV production
ENV NPM_CONFIG_LOGLEVEL error
ENV NPM_CONFIG_PRODUCTION true
ENV RAILS_ENV production

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y git npm libmysqlclient-dev \
    && /bin/bash -l -c ". /etc/profile.d/rvm.sh && bundle install --deployment --without test development" \
    && /bin/bash -l -c ". /etc/profile.d/rvm.sh && npm install"



ADD ./docker/sharetribe/files /sharetribe
RUN chmod +x /sharetribe/entrypoint.sh
ENV TINI_VERSION v0.18.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
RUN chmod +x /tini


ENTRYPOINT ["/tini", "-s"]
CMD ["/bin/bash", "--", "-l", "-c", "/sharetribe/entrypoint.sh"]
